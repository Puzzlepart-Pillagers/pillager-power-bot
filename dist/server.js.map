{"version":3,"sources":["webpack/bootstrap","C:\\code\\acdc\\teams bot\\src\\app\\TeamsAppsComponents.ts","C:\\code\\acdc\\teams bot\\src\\app\\powerPillagerBot\\PowerPillager.ts","C:\\code\\acdc\\teams bot\\src\\app\\powerPillagerBot\\dialogs\\HelpDialog.ts","C:\\code\\acdc\\teams bot\\src\\app\\powerPillagerBot\\dialogs\\WelcomeDialog.ts","C:\\code\\acdc\\teams bot\\src\\app\\server.ts","external \"botbuilder\"","external \"botbuilder-dialogs\"","external \"botbuilder-teams\"","external \"debug\"","external \"dotenv\"","external \"express\"","external \"express-msteams-host\"","external \"http\"","external \"morgan\"","external \"node-fetch\"","external \"path\""],"names":[],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// Components will be added here\nexport const nonce = {}; // Do not remove!\n// Automatically added for the powerPillagerBot bot\nexport * from \"./powerPillagerBot/PowerPillager\";\n","import { BotDeclaration, IBot } from \"express-msteams-host\";\nimport { DialogSet, DialogState } from \"botbuilder-dialogs\";\nimport { StatePropertyAccessor, CardFactory, TurnContext, MemoryStorage, ConversationState, ActivityTypes, ChannelAccount, BotAdapter } from \"botbuilder\";\nimport HelpDialog from \"./dialogs/HelpDialog\";\nimport WelcomeCard from \"./dialogs/WelcomeDialog\";\nimport { TeamsContext, TeamsActivityProcessor, TeamsAdapter, TeamsChannelAccount } from \"botbuilder-teams\";\nconst fetch = require('node-fetch');\n\n/**\n * Implementation for Power Pillager\n */\n@BotDeclaration(\n    \"/api/messages\",\n    new MemoryStorage(),\n    process.env.MICROSOFT_APP_ID,\n    process.env.MICROSOFT_APP_PASSWORD\n)\n\nexport class PowerPillager implements IBot {\n    private readonly conversationState: ConversationState;\n    private readonly dialogs: DialogSet;\n    private dialogState: StatePropertyAccessor<DialogState>;\n    private readonly activityProc = new TeamsActivityProcessor();\n    \n    private commands: string[] = [ 'king', 'me', 'stats', 'help', 'man' ];\n    private async messageHandler(text: string, context: TurnContext, sender: TeamsChannelAccount): Promise<void> { \n        let args: string[] = text.trim().split(' ');\n        const command: string = args[0].toLocaleLowerCase();\n        if (this.commands.indexOf(command) !== -1) {\n            switch(command) {\n                case 'me':\n                case 'stats':\n                case 'king': {\n                    let request = { email: sender.email.toLowerCase() };\n                    if (args.indexOf('--user') !== -1) {\n                        const arg = args[args.indexOf('--user') + 1]\n                        if (arg) request.email = arg;\n                    }\n\n                    let kings: any;\n                    try {\n                        const response = await fetch(\n                            `https://pillagers-storage-functions.azurewebsites.net/api/GetKing?email=${request.email}`,\n                            { method: 'GET',  headers: { 'Content-Type': 'application/json' } }\n                        );\n                        kings = await (response as any).json();\n                    } catch(e) {\n                        this.errorFeedback(e, context);\n                        console.error('### error (fetch azure):', e);\n                    }\n\n                    if (kings.value[0]) {\n                        try {\n                            const king = kings.value[0];\n                            await context.sendActivity({\n                                type: 'message',\n                                value: {\n                                    user: king.Email\n                                },\n                                channelData: {\n                                    user: king.Email\n                                },\n                                attachments: [\n                                    {\n                                        contentType: 'application/vnd.microsoft.card.adaptive',\n                                        content: {\n                                            type: 'AdaptiveCard',\n                                            version: '1.0',\n                                            body: [\n                                                { type: 'Image', url: 'https://www.epsilontheory.com/wp-content/uploads/epsilon-theory-one-million-dollars-september-15-2015-austin-powers.jpg' },\n                                                { type: 'TextBlock', text: `name: ${king.FirstName} ${king.LastName}` },\n                                                { type: 'TextBlock', text: `monies: ${king.Penning} Pennings`, size: 'Small' },\n                                            ],\n                                            actions: [\n                                                { type: 'Action.Submit', title: 'Get Free 1 Billion Pennings', data: { addMoney: '1000000000' } }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            });\n                        } catch(e) {\n                            this.errorFeedback(e, context);\n                            console.error('### error (adaptiveCard):', e);\n                        }\n                    } else {\n                        await context.sendActivity(`Cannot find a user registred with: <i>${request.email}</i>, registrer at <a href='http://pillagers.no'>pillagers.no<a/>.`)\n                    }\n                    return;\n                }\n                case 'man':\n                case 'help': {\n                    const dc = await this.dialogs.createContext(context);\n                    await dc.beginDialog(\"help\");\n                    return;\n                }\n            }\n        } else {\n            await context.sendActivity(`${command} is not a valid action.`);\n            return;\n        }\n    }\n\n    private async errorFeedback(error: Error, context: TurnContext): Promise<void> {\n        await context.sendActivity(`Something went wrong: ${error}`);\n    }\n\n    public constructor(conversationState: ConversationState) {\n        this.conversationState = conversationState;\n        this.dialogState = conversationState.createProperty(\"dialogState\");\n        this.dialogs = new DialogSet(this.dialogState);\n        this.dialogs.add(new HelpDialog(\"help\"));\n\n        this.activityProc.messageActivityHandler = {\n            onMessage: async (context: TurnContext): Promise<void> => { // NOTE Incoming messages\n                const teamsContext: TeamsContext = TeamsContext.from(context); // NOTE will be undefined outside of teams\n                const sender: TeamsChannelAccount = await this.getSenderInformation((context.adapter as TeamsAdapter), context);\n\n                switch (context.activity.type) {\n                    case ActivityTypes.Message:\n                        let text: string = teamsContext ? (\n                            teamsContext.getActivityTextWithoutMentions() ? \n                                teamsContext.getActivityTextWithoutMentions().toLowerCase() : \n                                context.activity.text\n                        ) : context.activity.text;\n                        if (text) {\n                            await this.messageHandler(text, context, sender);\n                        }\n                    case ActivityTypes.Invoke: {\n                        if (context.activity && context.activity.value && context.activity.value.addMoney) {\n                            const email: string = sender.email.toLowerCase();\n                            const response: any = await fetch(`https://pillagers-storage-functions.azurewebsites.net/api/GetKing?email=${email}`, { method: 'GET',  headers: { 'Content-Type': 'application/json' } });\n                            const json: any = response.json();\n                            const money = json.value ? { current: (json.value[0].Panning as number), add: (context.activity.value.addMoney as number) } : {};\n                            console.log('### monies ---> currentPenning:', money.current, ', addedPenning:', money.add);\n                            if (money.add && money.current) {\n                                const totalPennings: number = money.add + money.current;\n                                console.log('### total monies', totalPennings);\n                                await fetch(\n                                    'https://pillagers-storage-functions.azurewebsites.net/api/SetPenning', \n                                    { method: 'POST', body: { email: sender.email, Penning: totalPennings }, headers: { 'Content-Type': 'application/json' } }\n                                );\n                            }\n                        }\n                    }\n                    default:\n                        break;\n                }\n\n                return this.conversationState.saveChanges(context);\n            }\n        };\n\n        this.activityProc.conversationUpdateActivityHandler = {\n            onConversationUpdateActivity: async (context: TurnContext): Promise<void> => {\n                if (context.activity.membersAdded && context.activity.membersAdded.length !== 0) {\n                    for (const idx in context.activity.membersAdded) {\n                        if (context.activity.membersAdded[idx].id === context.activity.recipient.id) {\n                            const welcomeCard = CardFactory.adaptiveCard(WelcomeCard);\n                            await context.sendActivity({ attachments: [welcomeCard] });\n                        }\n                    }\n                }\n            }\n        };\n   }\n\n   private async getSenderInformation(adapter: TeamsAdapter, context: TurnContext): Promise<TeamsChannelAccount> {\n       const activityMembers: TeamsChannelAccount[] = await adapter.getActivityMembers(context);\n       let conversationMembers: TeamsChannelAccount[] = [];\n       if (!activityMembers) {\n        conversationMembers = await adapter.getConversationMembers(context);\n       }\n\n       const members: TeamsChannelAccount[] = activityMembers ? activityMembers : conversationMembers;\n       if (members[0]) {\n        return members[0] as TeamsChannelAccount;\n       }\n\n       return null;\n   }\n\n   public async onTurn(context: TurnContext): Promise<any> {\n        await this.activityProc.processIncomingActivity(context);\n    }\n\n}\n","import { Dialog, DialogContext, DialogTurnResult } from \"botbuilder-dialogs\";\n\nexport default class HelpDialog extends Dialog {\n    constructor(dialogId: string) {\n        super(dialogId);\n    }\n\n    public async beginDialog(context: DialogContext, options?: any): Promise<DialogTurnResult> {\n        context.context.sendActivity(`TODO - help`);\n        return await context.endDialog();\n    }\n}\n","const WelcomeCard = require('./WelcomeCard.json');\n\nexport default WelcomeCard;\n","import * as Express from \"express\";\nimport * as http from \"http\";\nimport * as path from \"path\";\nimport * as morgan from \"morgan\";\nimport { MsTeamsApiRouter, MsTeamsPageRouter } from \"express-msteams-host\";\nimport * as debug from \"debug\";\n\n\n\n// Initialize debug logging module\nconst log = debug(\"msteams\");\n\nlog(`Initializing Microsoft Teams Express hosted App...`);\n\n// Initialize dotenv, to use .env file settings if existing\n// tslint:disable-next-line:no-var-requires\nrequire(\"dotenv\").config();\n\n\n\n// The import of components has to be done AFTER the dotenv config\nimport * as allComponents from \"./TeamsAppsComponents\";\n\n// Create the Express webserver\nconst express = Express();\nconst port = process.env.port || process.env.PORT || 3007;\n\n// Inject the raw request body onto the request object\nexpress.use(Express.json({\n    verify: (req, res, buf: Buffer, encoding: string): void => {\n        (req as any).rawBody = buf.toString();\n    }\n}));\nexpress.use(Express.urlencoded({ extended: true }));\n\n// Express configuration\nexpress.set(\"views\", path.join(__dirname, \"/\"));\n\n// Add simple logging\nexpress.use(morgan(\"tiny\"));\n\n// Add /scripts and /assets as static folders\nexpress.use(\"/scripts\", Express.static(path.join(__dirname, \"web/scripts\")));\nexpress.use(\"/assets\", Express.static(path.join(__dirname, \"web/assets\")));\n\n// routing for bots, connectors and incoming web hooks - based on the decorators\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsApiRouter(allComponents));\n\n// routing for pages for tabs and connector configuration\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsPageRouter({\n    root: path.join(__dirname, \"web/\"),\n    components: allComponents\n}));\n\n// Set default web page\nexpress.use(\"/\", Express.static(path.join(__dirname, \"web/\"), {\n    index: \"index.html\"\n}));\n\n// Set the port\nexpress.set(\"port\", port);\n\n// Start the webserver\nhttp.createServer(express).listen(port, () => {\n    log(`Server running on ${port}`);\n});\n","module.exports = require(\"botbuilder\");","module.exports = require(\"botbuilder-dialogs\");","module.exports = require(\"botbuilder-teams\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-msteams-host\");","module.exports = require(\"http\");","module.exports = require(\"morgan\");","module.exports = require(\"node-fetch\");","module.exports = require(\"path\");"],"sourceRoot":""}